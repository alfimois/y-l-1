const filter=(function(){const cacheDom={};const filtersStack=[];function cachingDom(){cacheDom.lectures=document.querySelectorAll('.main__lecture');cacheDom.filterDateInput=document.querySelector('.lectures-filter__date-input');cacheDom.filterSchoolContent=document.querySelector('.lectures-filter__school-content');cacheDom.filterLectorContent=document.querySelector('.lectures-filter__lector-content')}function addEvents(){cacheDom.filterDateInput.addEventListener('change',_=>filteredAllLecture());cacheDom.filterSchoolContent.addEventListener('mousedown',e=>{const targetClassList=e.target.classList;if(targetClassList.contains('lectures-filter__school-item')){targetClassList.toggle('active');filteredAllLecture()}});cacheDom.filterLectorContent.addEventListener('mousedown',e=>{const targetClassList=e.target.classList;if(targetClassList.contains('lectures-filter__lector-item')){targetClassList.toggle('active');filteredAllLecture()}})}function filteredAllLecture(){[].forEach.call(cacheDom.lectures,lecture=>{let isValidLecture=filtersStack.every(filterFunc=>filterFunc(lecture));if(isValidLecture===true)lecture.style.display='block';else lecture.style.display='none'})}function filterDate(lecture){const lectureDate=lecture.querySelector('.main__lecture-date');const correctInputDate=cacheDom.filterDateInput.value.replace(/-/g,'.');if(correctInputDate===''||lectureDate.innerText===correctInputDate)return true;return false}function filterSchool(lecture){const activeSchoolFilterItems=document.querySelectorAll('.lectures-filter__school-item.active');if(activeSchoolFilterItems.length===0)return true;return[].some.call(activeSchoolFilterItems,item=>{const filterText=item.innerText;const schoolsList=lecture.querySelectorAll('.main__name-of-school');return[].some.call(schoolsList,school=>school.innerText===filterText)})}function filterLector(lecture){const activeLectorFilterItems=document.querySelectorAll('.lectures-filter__lector-item.active');if(activeLectorFilterItems.length===0)return true;return[].some.call(activeLectorFilterItems,item=>{const filterText=item.innerText;const lectorsList=lecture.querySelectorAll('.main__name-of-lector');return[].some.call(lectorsList,lector=>lector.innerText===filterText)})}function addFilterFnsToStack(){[].forEach.call(arguments,filterFn=>filtersStack.push(filterFn))}return{init:_=>{cachingDom();addFilterFnsToStack(filterDate,filterSchool,filterLector);addEvents()},addFilter:(filterFn,eventName,eventFn)=>{}}})();